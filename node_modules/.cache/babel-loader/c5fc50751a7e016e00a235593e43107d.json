{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\Appsala React\\\\appsala\\\\src\\\\components\\\\Addcompany.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Addcompany.css\"; // Add this CSS file for styling\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './Review.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Addcompany = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    shortname: \"\",\n    rating: {},\n    logo: null,\n    tag: [],\n    Category: \"\",\n    shortDescription: \"\",\n    longDescription: \"\",\n    review: \"\",\n    sellerDetails: {\n      seller: \"\",\n      Website: \"\",\n      companyWebsite: \"\",\n      yearFounded: \"\",\n      HQLocation: \"\",\n      socialmedia: {\n        twitter: \"\",\n        linkedInPage: \"\"\n      }\n    },\n    appPricing: [],\n    appMedia: {\n      officialScreenshots: [],\n      officialVideos: [],\n      officialDownloads: []\n    }\n  });\n  const [appPricing, setAppPricing] = useState([{\n    appName: '',\n    price: 0,\n    description: ''\n  }]);\n  const [appMedia, setAppMedia] = useState({\n    officialScreenshots: [],\n    officialVideos: [],\n    officialDownloads: []\n  });\n\n  const handleAddAppPricing = () => {\n    setAppPricing([...appPricing, {\n      appName: '',\n      price: 0,\n      description: ''\n    }]);\n  };\n\n  const handleAppPricingChange = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const updatedAppPricing = appPricing.map((pricing, i) => {\n      if (i === index) {\n        return { ...pricing,\n          [name]: value\n        };\n      }\n\n      return pricing;\n    });\n    setAppPricing(updatedAppPricing);\n  };\n\n  const handleAppMediaChange = (event, field) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setAppMedia({ ...appMedia,\n        [field]: [...appMedia[field], reader.result]\n      });\n    };\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"twitter\") {\n      // Update the Twitter field in socialmedia\n      setFormData(prevFormData => ({ ...prevFormData,\n        sellerDetails: { ...prevFormData.sellerDetails,\n          socialmedia: { ...prevFormData.sellerDetails.socialmedia,\n            twitter: value\n          }\n        }\n      }));\n    } else if (name === \"linkedInPage\") {\n      // Update the LinkedIn Page field in socialmedia\n      setFormData(prevFormData => ({ ...prevFormData,\n        sellerDetails: { ...prevFormData.sellerDetails,\n          socialmedia: { ...prevFormData.sellerDetails.socialmedia,\n            linkedInPage: value\n          }\n        }\n      }));\n    } else if (name.includes(\".\")) {\n      const [outerName, innerName] = name.split(\".\"); // Update other fields\n\n      setFormData(prevFormData => ({ ...prevFormData,\n        [outerName]: { ...prevFormData[outerName],\n          [innerName]: value\n        }\n      }));\n    } else if (name === \"tag\") {\n      const tagsArray = value.split(\", \");\n      setFormData(prevFormData => ({ ...prevFormData,\n        tag: tagsArray\n      }));\n    } else {\n      if (name === \"sellerDetails.yearFounded\" && value !== \"\") {\n        const numericValue = parseInt(value);\n\n        if (!Number.isNaN(numericValue) && numericValue >= 1000 && numericValue <= 9999) {\n          setFormData(prevFormData => ({ ...prevFormData,\n            [name]: value\n          }));\n        }\n      } else {\n        setFormData(prevFormData => ({ ...prevFormData,\n          [name]: value\n        }));\n      }\n    }\n  };\n\n  const handleRatingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const numericValue = Number(value); // Check if the value is a valid number between 0 and 5\n\n    if (!isNaN(numericValue) && numericValue >= 0 && numericValue <= 5) {\n      setFormData(prevFormData => ({ ...prevFormData,\n        rating: { ...prevFormData.rating,\n          [name]: numericValue\n        }\n      }));\n    } else {\n      // If the value is invalid, set the rating field to null\n      setFormData(prevFormData => ({ ...prevFormData,\n        rating: { ...prevFormData.rating,\n          [name]: null\n        }\n      }));\n    }\n  };\n\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setFormData(prevFormData => ({ ...prevFormData,\n      logo: file\n    }));\n  }; // State to store the list of categories fetched from the API\n\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    // Fetch categories from the API when the component mounts\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = () => {\n    fetch(\"http://localhost:5000/category\").then(response => response.json()).then(data => {\n      // Check if the response contains a \"data\" property that is an array\n      if (data && Array.isArray(data.data)) {\n        setCategories(data.data);\n      } else {\n        console.error(\"Invalid API response format - categories not found.\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Post the form data to http://localhost:5000/apps using fetch\n      const response = await fetch(\"http://localhost:5000/create_products\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }); // Check if the response was successful before clearing the form\n\n      if (response.ok) {\n        alert(\"Data saved successfully\");\n      } else {\n        alert(\"There is a problem\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n  };\n\n  const [richText, setRichText] = useState('');\n\n  const handleTextChange = content => {\n    setRichText(content); // Update the review content in the formData state\n\n    setFormData(prevFormData => ({ ...prevFormData,\n      review: richText\n    }));\n  };\n\n  const TextEditorModules = {\n    toolbar: [[{\n      'header': [1, 2, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link', 'image'], ['clean']],\n    clipboard: {\n      matchVisual: false\n    }\n  };\n  const TextEditorFormats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"shortname\",\n        children: \"Short Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"shortname\",\n        name: \"shortname\",\n        value: formData.shortname,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Usability\",\n        children: \"Usability:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Usability\",\n        name: \"rating.Usability\",\n        value: formData.rating.Usability,\n        onChange: handleRatingChange,\n        min: 0,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Perfomance\",\n        children: \"Performance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Perfomance\",\n        name: \"rating.Perfomance\",\n        value: formData.rating.Perfomance,\n        onChange: handleRatingChange,\n        min: 0,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Features\",\n        children: \"Features:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Features\",\n        name: \"rating.Features\",\n        value: formData.rating.Features,\n        onChange: handleRatingChange,\n        min: 0,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Support\",\n        children: \"Support:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Support\",\n        name: \"rating.Support\",\n        value: formData.rating.Support,\n        onChange: handleRatingChange,\n        min: 0,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Value\",\n        children: \"Value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Value\",\n        name: \"rating.Value\",\n        value: formData.rating.Value,\n        onChange: handleRatingChange,\n        min: 0,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"company\",\n        children: \"Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"company\",\n        name: \"rating.company\",\n        value: formData.rating.company,\n        onChange: handleRatingChange,\n        min: 0,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tag\",\n        name: \"tag\",\n        value: formData.tag.join(\", \"),\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Category\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"Category\",\n        name: \"Category\",\n        value: formData.Category,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category._id,\n          children: category.name\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"shortDescription\",\n        children: \"Short Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"shortDescription\",\n        name: \"shortDescription\",\n        value: formData.shortDescription,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"longDescription\",\n        children: \"Long Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"longDescription\",\n        name: \"longDescription\",\n        value: formData.longDescription,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"review\",\n        children: \"Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rich Text Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          value: richText,\n          onChange: handleTextChange,\n          placeholder: \"Enter your text here...\",\n          modules: TextEditorModules,\n          formats: TextEditorFormats,\n          style: {\n            height: '300px',\n            marginBottom: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"seller\",\n        children: \"Seller:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"seller\",\n        name: \"sellerDetails.seller\",\n        value: formData.sellerDetails.seller,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Website\",\n        children: \"Website:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Website\",\n        name: \"sellerDetails.Website\",\n        value: formData.sellerDetails.Website,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyWebsite\",\n        children: \"Company Website:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyWebsite\",\n        name: \"sellerDetails.companyWebsite\",\n        value: formData.sellerDetails.companyWebsite,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearFounded\",\n        children: \"Year Founded:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"yearFounded\",\n        name: \"sellerDetails.yearFounded\",\n        value: formData.sellerDetails.yearFounded,\n        onChange: handleChange,\n        required: true,\n        min: \"1900\",\n        max: \"2050\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"HQLocation\",\n        children: \"HQ Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"HQLocation\",\n        name: \"sellerDetails.HQLocation\",\n        value: formData.sellerDetails.HQLocation,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"twitter\",\n        children: \"Twitter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"twitter\",\n        name: \"twitter\" // Use \"twitter\" as the name, not \"sellerDetails.socialmedia.twitter\"\n        ,\n        value: formData.sellerDetails.socialmedia.twitter,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"linkedInPage\",\n        children: \"LinkedIn Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"linkedInPage\",\n        name: \"linkedInPage\" // Use \"linkedInPage\" as the name, not \"sellerDetails.socialmedia.linkedInPage\"\n        ,\n        value: formData.sellerDetails.socialmedia.linkedInPage,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Addcompany, \"nfOqMycHzrXWxZHVoFnKs4DAORs=\");\n\n_c = Addcompany;\nexport default Addcompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addcompany\");","map":{"version":3,"sources":["C:/Users/Ali/Desktop/Appsala React/appsala/src/components/Addcompany.jsx"],"names":["React","useState","useEffect","ReactQuill","Addcompany","formData","setFormData","name","shortname","rating","logo","tag","Category","shortDescription","longDescription","review","sellerDetails","seller","Website","companyWebsite","yearFounded","HQLocation","socialmedia","twitter","linkedInPage","appPricing","appMedia","officialScreenshots","officialVideos","officialDownloads","setAppPricing","appName","price","description","setAppMedia","handleAddAppPricing","handleAppPricingChange","event","index","value","target","updatedAppPricing","map","pricing","i","handleAppMediaChange","field","file","files","reader","FileReader","readAsDataURL","onload","result","handleChange","e","prevFormData","includes","outerName","innerName","split","tagsArray","numericValue","parseInt","Number","isNaN","handleRatingChange","handleImageChange","categories","setCategories","fetchCategories","fetch","then","response","json","data","Array","isArray","console","error","catch","handleSubmit","method","headers","body","JSON","stringify","ok","alert","richText","setRichText","handleTextChange","content","TextEditorModules","toolbar","clipboard","matchVisual","TextEditorFormats","Usability","Perfomance","Features","Support","Value","company","join","category","_id","height","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Addcompany.css\"; // Add this CSS file for styling\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './Review.css';\n\n\n\n\nconst Addcompany = () => {\n  \n  const [formData, setFormData] = useState({\n    name: \"\",\n    shortname: \"\",\n    rating: {\n      \n    },\n    logo: null,\n    tag: [],\n    Category: \"\",\n    shortDescription: \"\",\n    longDescription: \"\",\n    review: \"\",\n    sellerDetails: {\n      seller: \"\", \n      Website: \"\",\n      companyWebsite: \"\",\n      yearFounded: \"\",\n      HQLocation: \"\",\n      socialmedia: { \n        twitter: \"\",\n        linkedInPage: \"\",\n      },\n    },\n    appPricing: [],\n    appMedia: {\n      officialScreenshots: [],\n      officialVideos: [],\n      officialDownloads: [],\n    },\n  });\n\n  const [appPricing, setAppPricing] = useState([\n    {\n      appName: '',\n      price: 0,\n      description: '',\n    },\n  ]);\n\n  const [appMedia, setAppMedia] = useState({\n    officialScreenshots: [],\n    officialVideos: [],\n    officialDownloads: [],\n  });\n\n  const handleAddAppPricing = () => {\n    setAppPricing([\n      ...appPricing,\n      {\n        appName: '',\n        price: 0,\n        description: '',\n      },\n    ]);\n  };\n\n  const handleAppPricingChange = (event, index) => {\n    const { name, value } = event.target;\n    const updatedAppPricing = appPricing.map((pricing, i) => {\n      if (i === index) {\n        return {\n          ...pricing,\n          [name]: value,\n        };\n      }\n      return pricing;\n    });\n\n    setAppPricing(updatedAppPricing);\n  };\n\n  const handleAppMediaChange = (event, field) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setAppMedia({\n        ...appMedia,\n        [field]: [...appMedia[field], reader.result],\n      });\n    };\n  };\n\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n  \n    if (name === \"twitter\") {\n      // Update the Twitter field in socialmedia\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        sellerDetails: {\n          ...prevFormData.sellerDetails,\n          socialmedia: {\n            ...prevFormData.sellerDetails.socialmedia,\n            twitter: value,\n          },\n        },\n      }));\n    } else if (name === \"linkedInPage\") {\n      // Update the LinkedIn Page field in socialmedia\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        sellerDetails: {\n          ...prevFormData.sellerDetails,\n          socialmedia: {\n            ...prevFormData.sellerDetails.socialmedia,\n            linkedInPage: value,\n          },\n        },\n      }));\n    } else if (name.includes(\".\")) {\n      const [outerName, innerName] = name.split(\".\");\n      // Update other fields\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        [outerName]: {\n          ...prevFormData[outerName],\n          [innerName]: value,\n        },\n      }));\n    } else if (name === \"tag\") {\n      const tagsArray = value.split(\", \");\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        tag: tagsArray,\n      }));\n    } else {\n      if (name === \"sellerDetails.yearFounded\" && value !== \"\") {\n        const numericValue = parseInt(value);\n        if (!Number.isNaN(numericValue) && numericValue >= 1000 && numericValue <= 9999) {\n          setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: value,\n          }));\n        }\n      } else {\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          [name]: value,\n        }));\n      }\n    }\n  };\n  \n\n\n\n  const handleRatingChange = (e) => {\n    const { name, value } = e.target;\n    const numericValue = Number(value);\n\n    // Check if the value is a valid number between 0 and 5\n    if (!isNaN(numericValue) && numericValue >= 0 && numericValue <= 5) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        rating: {\n          ...prevFormData.rating,\n          [name]: numericValue,\n        },\n      }));\n    } else {\n      // If the value is invalid, set the rating field to null\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        rating: {\n          ...prevFormData.rating,\n          [name]: null,\n        },\n      }));\n    }\n  }\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      logo: file,\n    }));\n  };\n\n  // State to store the list of categories fetched from the API\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    // Fetch categories from the API when the component mounts\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = () => {\n    fetch(\"http://localhost:5000/category\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Check if the response contains a \"data\" property that is an array\n        if (data && Array.isArray(data.data)) {\n          setCategories(data.data);\n        } else {\n          console.error(\"Invalid API response format - categories not found.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n  };\n\n  const handleSubmit = async () => {\n    \n\n    try {\n      // Post the form data to http://localhost:5000/apps using fetch\n      const response = await fetch(\"http://localhost:5000/create_products\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      // Check if the response was successful before clearing the form\n      if (response.ok) {\n        \n        alert(\"Data saved successfully\");\n      } else {\n        alert(\"There is a problem\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n  };\n  \n\n\n  const [richText, setRichText] = useState('');\n\n  const handleTextChange = (content) => {\n    setRichText(content);\n    // Update the review content in the formData state\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      review: richText,\n    }))\n  };\n\n\n\n\n\n  const TextEditorModules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n      ['link', 'image'],\n      ['clean'],\n    ],\n    clipboard: {\n      matchVisual: false,\n    },\n  };\n\n  const TextEditorFormats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image',\n  ];\n\n\n  return (\n    <div className=\"app-form-container\">\n      <h1>Create New Application</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"shortname\">Short Name:</label>\n        <input\n          type=\"text\"\n          id=\"shortname\"\n          name=\"shortname\"\n          value={formData.shortname}\n          onChange={handleChange}\n          required\n        />\n\n        <h2>Rating:</h2>\n        <label htmlFor=\"Usability\">Usability:</label>\n        <input\n          type=\"number\"\n          id=\"Usability\"\n          name=\"rating.Usability\"\n          value={formData.rating.Usability}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Perfomance\">Performance:</label>\n        <input\n          type=\"number\"\n          id=\"Perfomance\"\n          name=\"rating.Perfomance\"\n          value={formData.rating.Perfomance}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Features\">Features:</label>\n        <input\n          type=\"number\"\n          id=\"Features\"\n          name=\"rating.Features\"\n          value={formData.rating.Features}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Support\">Support:</label>\n        <input\n          type=\"number\"\n          id=\"Support\"\n          name=\"rating.Support\"\n          value={formData.rating.Support}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Value\">Value:</label>\n        <input\n          type=\"number\"\n          id=\"Value\"\n          name=\"rating.Value\"\n          value={formData.rating.Value}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"company\">Company:</label>\n        <input\n          type=\"number\"\n          id=\"company\"\n          name=\"rating.company\"\n          value={formData.rating.company}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n{/* \n        <label htmlFor=\"logo\">Logo:</label>\n        <input\n          type=\"file\"\n          id=\"logo\"\n          name=\"logo\"\n          onChange={handleImageChange}\n        /> */}\n\n        <label htmlFor=\"tag\">Tags</label>\n        <input\n          type=\"text\"\n          id=\"tag\"\n          name=\"tag\"\n          value={formData.tag.join(\", \")}\n          onChange={handleChange}\n        />\n\n        <label htmlFor=\"Category\">Category:</label>\n        <select\n          id=\"Category\"\n          name=\"Category\"\n          value={formData.Category}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\" disabled>\n            Select a category\n          </option>\n          {categories.map((category) => (\n            <option key={category._id} value={category._id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"shortDescription\">Short Description:</label>\n        <textarea\n          id=\"shortDescription\"\n          name=\"shortDescription\"\n          value={formData.shortDescription}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"longDescription\">Long Description:</label>\n        <textarea\n          id=\"longDescription\"\n          name=\"longDescription\"\n          value={formData.longDescription}\n          onChange={handleChange}\n          required\n        />\n        \n          <label htmlFor=\"review\">Review:</label>\n          <h1>Rich Text Editor</h1>\n          <div>\n          <ReactQuill\n            value={richText}\n            onChange={handleTextChange}\n            placeholder=\"Enter your text here...\"\n            modules={TextEditorModules}\n            formats={TextEditorFormats}\n            style={{ height: '300px', marginBottom :'100px' }}\n          />\n          </div>\n          \n      \n        \n        <label htmlFor=\"seller\">Seller:</label>\n        <input\n          type=\"text\"\n          id=\"seller\"\n          name=\"sellerDetails.seller\"\n          value={formData.sellerDetails.seller}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"Website\">Website:</label>\n        <input\n          type=\"text\"\n          id=\"Website\"\n          name=\"sellerDetails.Website\"\n          value={formData.sellerDetails.Website}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"companyWebsite\">Company Website:</label>\n        <input\n          type=\"text\"\n          id=\"companyWebsite\"\n          name=\"sellerDetails.companyWebsite\"\n          value={formData.sellerDetails.companyWebsite}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"yearFounded\">Year Founded:</label>\n        <input\n          type=\"number\"\n\n          id=\"yearFounded\"\n          name=\"sellerDetails.yearFounded\"\n          value={formData.sellerDetails.yearFounded}\n          onChange={handleChange}\n          required\n          min=\"1900\" max=\"2050\"\n        />\n\n        <label htmlFor=\"HQLocation\">HQ Location:</label>\n        <input\n          type=\"text\"\n          id=\"HQLocation\"\n          name=\"sellerDetails.HQLocation\"\n          value={formData.sellerDetails.HQLocation}\n          onChange={handleChange}\n          required\n        />\n\n<label htmlFor=\"twitter\">Twitter:</label>\n<input\n  type=\"text\"\n  id=\"twitter\"\n  name=\"twitter\"  // Use \"twitter\" as the name, not \"sellerDetails.socialmedia.twitter\"\n  value={formData.sellerDetails.socialmedia.twitter}\n  onChange={handleChange}\n/>\n\n<label htmlFor=\"linkedInPage\">LinkedIn Page:</label>\n<input\n  type=\"text\"\n  id=\"linkedInPage\"\n  name=\"linkedInPage\" // Use \"linkedInPage\" as the name, not \"sellerDetails.socialmedia.linkedInPage\"\n  value={formData.sellerDetails.socialmedia.linkedInPage}\n  onChange={handleChange}\n/>\n\n\n{/* {appPricing.map((pricing, index) => (\n        <div key={index}>\n          <input\n            type=\"text\"\n            placeholder=\"App Name\"\n            name=\"appName\"\n            value={pricing.appName}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Price\"\n            name=\"price\"\n            value={pricing.price}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={pricing.description}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n        </div>\n      ))}\n      <button onClick={handleAddAppPricing}>Add Pricing</button>\n\n      {/* App Media Fields */}\n      {/* <label>Screenshots</label>\n      <input\n        type=\"file\"\n        name=\"officialScreenshots\"\n        placeholder=\"Screenshots\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialScreenshots')}\n      />\n      <label>officialVideos</label>\n      <input\n        type=\"file\"\n        name=\"officialVideos\"\n        placeholder=\"officialVideos\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialVideos')}\n      />\n      <label>officialDownloads</label>\n      <input\n        type=\"file\"\n        name=\"officialDownloads\"\n        placeholder=\"officialDownloads\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialDownloads')}\n      /> */} \n\n\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Addcompany;\n"]},"metadata":{},"sourceType":"module"}