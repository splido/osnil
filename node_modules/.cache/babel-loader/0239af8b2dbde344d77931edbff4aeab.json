{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\Appsala React\\\\appsala\\\\src\\\\components\\\\Products.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Products(_ref) {\n  _s();\n\n  let {\n    products\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [productList, setProductList] = useState([]); // const [productList, setProductList] = useState()\n  // useEffect(() => {\n  //   setProductList(products)\n  // }, [products])\n  // useEffect(() => {\n  //   // Simulate an API call or any asynchronous operation that takes time.\n  //   setTimeout(() => {\n  //     setLoading(false);\n  //   }, 2000);\n  // }, []);\n\n  const fetch = () => {\n    const products_ = Object.entries(products);\n    const firstFiveElements = products_.slice(0, 5);\n    const product_list = Object.fromEntries(firstFiveElements);\n    setProductList(product_list);\n    console.log(productList);\n    setLoading(false);\n  };\n\n  setTimeout(fetch, 3000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this) : productList ? productList.map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n      product: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"O2KOqA+mDU+X0dC1QbwDDOq2/b8=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["C:/Users/Ali/Desktop/Appsala React/appsala/src/components/Products.jsx"],"names":["useEffect","useState","ProductItem","Spinner","Products","products","loading","setLoading","productList","setProductList","fetch","products_","Object","entries","firstFiveElements","slice","product_list","fromEntries","console","log","setTimeout","map","product","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AACA,SAASC,QAAT,OAA8B;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CAF4B,CAG1B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEC,QAAMS,KAAK,GAAG,MAAK;AAChB,UAAMC,SAAS,GAAGC,MAAM,CAACC,OAAP,CAAeR,QAAf,CAAlB;AACA,UAAMS,iBAAiB,GAAGH,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAA1B;AACA,UAAMC,YAAY,GAAGJ,MAAM,CAACK,WAAP,CAAmBH,iBAAnB,CAArB;AACDL,IAAAA,cAAc,CAACO,YAAD,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACF,GAPA;;AAQDa,EAAAA,UAAU,CAACV,KAAD,EAAQ,IAAR,CAAV;AAEF,sBACE;AAAA,cAEIJ,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACPE,WAAW,GACTA,WAAW,CAACa,GAAZ,CAAiBC,OAAD,iBACV,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAIA;AAAzC,OAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADN,CADS,gBAIR;AAAA,8BACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADG;AAAA;AAPP;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvCQnB,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport ProductItem from \"./ProductItem\"\r\nimport Spinner from './Spinner'\r\nfunction Products({products}) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [productList, setProductList] = useState([])\r\n    // const [productList, setProductList] = useState()\r\n    // useEffect(() => {\r\n    //   setProductList(products)\r\n    // }, [products])\r\n    \r\n    // useEffect(() => {\r\n    //   // Simulate an API call or any asynchronous operation that takes time.\r\n    //   setTimeout(() => {\r\n    //     setLoading(false);\r\n    //   }, 2000);\r\n    // }, []);\r\n\r\n     const fetch = () =>{\r\n        const products_ = Object.entries(products);\r\n        const firstFiveElements = products_.slice(0, 5);\r\n        const product_list = Object.fromEntries(firstFiveElements)\r\n       setProductList(product_list)\r\n       console.log(productList)\r\n       setLoading(false);\r\n    }\r\n    setTimeout(fetch, 3000);\r\n   \r\n  return (\r\n    <div>\r\n       {\r\n        loading ? <Spinner/> :\r\n        productList ? (\r\n          productList.map((product)=>(\r\n                <ProductItem key={product.id} product = {product}/>\r\n            ))\r\n        ): <>\r\n        <Spinner/> </>\r\n           \r\n        } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}