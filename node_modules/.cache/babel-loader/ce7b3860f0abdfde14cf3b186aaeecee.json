{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\Appsala React\\\\appsala\\\\src\\\\components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prevCredentials => ({ ...prevCredentials,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let {\n      email,\n      password\n    } = credentials;\n    let res = await fetch(\"https://appsalabackend-p20y.onrender.com/login\", {\n      method: \"post\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"content-Type\": \"application/json\"\n      }\n    });\n    let result = await res.json();\n    console.log(result);\n\n    if (email === 'admin@email.com' && password === 'admin') {\n      // console.log(email, password)\n      navigate(\"/form\");\n    } else {\n      alert('wrong email or pass');\n    } // Reset the form fields after submission\n\n\n    setCredentials({\n      email: '',\n      password: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: credentials.email,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: credentials.password,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"  Don't have account ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgetpassword\",\n            children: \"Forget Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"BKGUCKjC1oFq6KV+aKWrKb9UNZ0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ali/Desktop/Appsala React/appsala/src/components/Login.jsx"],"names":["React","useState","Link","useNavigate","Login","navigate","isAuthenticated","setIsAuthenticated","credentials","setCredentials","email","password","handleInputChange","e","name","value","target","prevCredentials","handleSubmit","preventDefault","res","fetch","method","body","JSON","stringify","headers","result","json","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Login.css';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n    const navigate = useNavigate()\n    const [isAuthenticated, setIsAuthenticated]=useState(false)\n    \n    const [credentials, setCredentials] = useState({\n        email: '',\n        password: '',\n    });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCredentials((prevCredentials) => ({\n            ...prevCredentials,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n\n        let { email, password } = credentials\n        let res = await fetch(\"https://appsalabackend-p20y.onrender.com/login\", {\n            method: \"post\",\n            body: JSON.stringify({\n                email, password\n            }), headers: {\n                \"content-Type\": \"application/json\"\n            }\n        })\n        let result = await res.json()\n        console.log(result)\n\n        if (email === 'admin@email.com' && password === 'admin') {\n            // console.log(email, password)\n            navigate(\"/form\")\n        } else {\n            alert('wrong email or pass')\n        }\n\n\n        // Reset the form fields after submission\n        setCredentials({\n            email: '',\n            password: '',\n        });\n    };\n\n    return (\n        <>\n            <h2>Login</h2>\n            <div className=\"container\">\n\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label><strong>Email:</strong></label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={credentials.email}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={credentials.password}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Login</button>\n                    <p><Link to={\"/\"}>  Don't have account ?</Link> <Link to={\"/forgetpassword\"}>Forget Password</Link></p>\n                </form>\n            </div>\n\n        </>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}