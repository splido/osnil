[{"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Profile.jsx":"1","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProfileProductItem.jsx":"2","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProfileProductsList.jsx":"3","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\CommentPopup.jsx":"4","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\CommentList.jsx":"5","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\RatingPopup.jsx":"6","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\StatusPopup.jsx":"7","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\index.js":"8","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\App.js":"9","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Footer.jsx":"10","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Navbar.jsx":"11","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Login.jsx":"12","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Addcompany.jsx":"13","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\PrivateRoute.jsx":"14","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Home.jsx":"15","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\ProductList.jsx":"16","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Product.jsx":"17","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Button.jsx":"18","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Menu.jsx":"19","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SearchList.jsx":"20","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductCard.jsx":"21","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ReviewCard.jsx":"22","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProfilePage.jsx":"23","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SingleProduct.jsx":"24","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Settings.jsx":"25","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Spinner.jsx":"26","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SimilarList.jsx":"27","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Products.jsx":"28","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductCardItem.jsx":"29","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductItem.jsx":"30"},{"size":7045,"mtime":1692615728953,"results":"31","hashOfConfig":"32"},{"size":6945,"mtime":1692595563885,"results":"33","hashOfConfig":"32"},{"size":349,"mtime":1692345139240,"results":"34","hashOfConfig":"32"},{"size":2028,"mtime":1692612436054,"results":"35","hashOfConfig":"32"},{"size":852,"mtime":1692345260975,"results":"36","hashOfConfig":"32"},{"size":2292,"mtime":1692595306526,"results":"37","hashOfConfig":"32"},{"size":2362,"mtime":1692607045178,"results":"38","hashOfConfig":"32"},{"size":256,"mtime":1692095735868,"results":"39","hashOfConfig":"32"},{"size":1921,"mtime":1692096251075,"results":"40","hashOfConfig":"32"},{"size":399,"mtime":1692096228068,"results":"41","hashOfConfig":"32"},{"size":3914,"mtime":1692096150536,"results":"42","hashOfConfig":"32"},{"size":2886,"mtime":1691747877358,"results":"43","hashOfConfig":"32"},{"size":15779,"mtime":1691750462240,"results":"44","hashOfConfig":"32"},{"size":695,"mtime":1692082843629,"results":"45","hashOfConfig":"32"},{"size":3461,"mtime":1691576864944,"results":"46","hashOfConfig":"32"},{"size":2261,"mtime":1691689337039,"results":"47","hashOfConfig":"32"},{"size":10523,"mtime":1691996265608,"results":"48","hashOfConfig":"32"},{"size":321,"mtime":1691132368360,"results":"49","hashOfConfig":"32"},{"size":1492,"mtime":1691570489533,"results":"50","hashOfConfig":"32"},{"size":598,"mtime":1691664797657,"results":"51","hashOfConfig":"32"},{"size":448,"mtime":1691521520081,"results":"52","hashOfConfig":"32"},{"size":582,"mtime":1691521488207,"results":"53","hashOfConfig":"32"},{"size":193,"mtime":1692180496892,"results":"54","hashOfConfig":"32"},{"size":889,"mtime":1691576501172,"results":"55","hashOfConfig":"32"},{"size":142,"mtime":1692180485654,"results":"56","hashOfConfig":"32"},{"size":154,"mtime":1690436395887,"results":"57","hashOfConfig":"32"},{"size":1574,"mtime":1691996259295,"results":"58","hashOfConfig":"32"},{"size":634,"mtime":1691645652665,"results":"59","hashOfConfig":"32"},{"size":807,"mtime":1691689930811,"results":"60","hashOfConfig":"32"},{"size":1970,"mtime":1691689967230,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xe0nff",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"69"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Profile.jsx",["160","161","162","163"],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProfileProductItem.jsx",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],[],"import { FaStar } from 'react-icons/fa'\r\nimport monday from '../assets/img/monday.png'\r\nimport {MdOutlineCategory} from 'react-icons/md'\r\nimport { LiaCommentSolid } from 'react-icons/lia'\r\nimport { FaArrowCircleRight } from 'react-icons/fa'\r\nimport { useState } from 'react'\r\nimport RatingPopup from './RatingPopup'\r\nimport StatusPopup from './StatusPopup'\r\nimport CommentPopup from './CommentPopup'\r\nfunction ProfileProductItem({info, id}) {\r\nconst [selectedDropdownValue, setSelectedDropdownValue] = useState(status);\r\nconst [showOverlay, setShowOverlay] = useState(false);\r\nconst [commentsPopup, setCommentsPopup] = useState(false);\r\nconst [ratingPopup, setRatingPopup] = useState(false);\r\nconst [ statusPopup, setStatusPopup] = useState(false);\r\nconst handleOverlayDoubleClick = () => {\r\n  setShowOverlay(false);\r\n};\r\n\r\n// console.log(info)\r\nif(info?.subscription?.date){\r\n\r\n  var inputDate = new Date(info.subscription.date);\r\n  var formattedDate = inputDate.toLocaleDateString('en-GB', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: '2-digit'\r\n  });\r\n}else{\r\n  var formattedDate = ''\r\n}\r\n\r\nif (info?.subscription?.comment){\r\n  var comments = info.subscription.comment.length\r\n}else{\r\n  var comments = 0\r\n}\r\n\r\nif(info?.obj_id?.rating){\r\n\r\n  var rating = info.obj_id.rating\r\n  \r\n  var ratingValues = Object.values(rating);\r\n  var totalValues = ratingValues.length;\r\n  \r\n  var sum = ratingValues.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n  var average = sum / totalValues;\r\n}else{\r\n  var average = 0\r\n}\r\n\r\nif (info?.obj_id?.logo){\r\n  var logo = info.obj_id.logo\r\n}else{\r\n  var logo = info.logo\r\n}\r\n\r\nif (info?.obj_id?.name){\r\n  var name = info.obj_id.name\r\n}else{\r\n  var name = info.name\r\n}\r\nif (info?.obj_id?.shortDescription){\r\n  var shortDescription = info.obj_id.shortDescription\r\n  const words = shortDescription.split(/\\s+/);\r\n  // Get the first 20 words\r\n  const first20Words = words.slice(0, 20).join(\" \");\r\n  var shortDescription = first20Words + '...'\r\n}else{\r\n  var shortDescription = info.shortDescription\r\n  const words = shortDescription.split(/\\s+/);\r\n  // Get the first 20 words\r\n  const first20Words = words.slice(0, 20).join(\" \");\r\n  var shortDescription = first20Words + '...'\r\n}\r\nif (info?.subscription?.package){\r\n  var subscriptionPackage =info.subscription.package\r\n}else{\r\n  var subscriptionPackage = info.appPricing[1].name\r\n}\r\nif (info?.subscription?.amount){\r\n  var subscriptionAmount =info.subscription.amount\r\n}else{\r\n  var subscriptionAmount =  info.appPricing[1].price\r\n \r\n}\r\nif (info?.status){\r\n  var status =info.status\r\n}else{\r\n  var status = 'No Status'\r\n}\r\nif (info?.obj_id?.Category){\r\n  var category =info.obj_id.Category\r\nconst convertedText = category\r\n  .split(\"-\")\r\n  .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n  .join(\" \");\r\n  var category = convertedText\r\n}else{\r\n  var category = info.Category\r\n  const convertedText = category\r\n  .split(\"-\")\r\n  .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n  .join(\" \");\r\n  var category = convertedText\r\n}\r\nconst handleDropdownChange = (event) => {\r\n  const selectedValue = event.target.value;\r\n  if(selectedValue === 'option1'){\r\n    setStatusPopup(true)\r\n    setShowOverlay(true);\r\n    setCommentsPopup(false)\r\n    setRatingPopup(false)\r\n  }\r\n  // setSelectedDropdownValue(selectedValue);\r\n  // console.log(selectedValue)\r\n  // setSelectedDropdownValue(selectedValue)\r\n};\r\n\r\nfunction StarRating({ average }) {\r\n  const renderStars = () => {\r\n    const stars = [];\r\n\r\n    if(average === 0){\r\n      for (let i = 0; i < 5; i++) {\r\n        stars.push(<FaStar key=\"empty\" style={{ color:\"#D9D9D9\" }} />);\r\n      }\r\n    }else{\r\n    const fullStars = Math.floor(average);\r\n    const remainingStar = average - fullStars;\r\n    const remainingStarColor = \" #D9D9D9\";\r\n\r\n\r\n    for (let i = 0; i < fullStars; i++) {\r\n      stars.push(<FaStar key={`full_${i}`} style={{ color: 'yellow' }} />);\r\n    }\r\n\r\n    if (remainingStar >= 0.5) {\r\n      stars.push(<FaStar key=\"half\" style={{ color: 'yellow' }} />);\r\n      stars.push(<FaStar key=\"empty\" style={{ color: remainingStarColor }} />);\r\n    } else if (remainingStar > 0) {\r\n      stars.push(<FaStar key=\"empty\" style={{ color: remainingStarColor }} />);\r\n    }\r\n  }\r\n    return stars;\r\n  };\r\n\r\n  return <div>{renderStars()}</div>;\r\n}\r\nconst handleCommentPopup = () => {\r\n  setShowOverlay(true);\r\n  setCommentsPopup(true)\r\n  setRatingPopup(false)\r\n  setStatusPopup(false)\r\n}\r\n\r\nconst handleRatingPopup = () => {\r\n  setShowOverlay(true);\r\n  setCommentsPopup(false)\r\n  setRatingPopup(true)\r\n  setStatusPopup(false)\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className=\"profile-products-list\">\r\n        <div className='profile-product-image'>\r\n        <img src={logo} alt=\"\" style={{height:'60px'}}/>\r\n        </div>\r\n        <div>\r\n        <div className='aligned'>\r\n        <h3 style={{color: 'black'}}>{name}</h3>\r\n        <div className=\"stars\">\r\n        <FaStar style={{color: \"yellow\"}}/>\r\n          <FaStar style={{color: \"yellow\"}}/>\r\n          <FaStar style={{color: \"yellow\"}}/>\r\n          <FaStar style={{color: \"yellow\"}}/>\r\n          <FaStar style={{color: \" #D9D9D9\"}}/>\r\n        </div>\r\n        <p>(149 Follows)</p>\r\n        </div>\r\n        <p> {shortDescription}</p>\r\n        <div className='aligned'>\r\n            \r\n            <div  className='aligned'>\r\n            <MdOutlineCategory/>\r\n            <p>Marketing</p>\r\n            <FaArrowCircleRight/>\r\n            <p>{category}</p>\r\n            </div>\r\n            <p>My Rating</p>\r\n        <div className=\"stars\"  onClick={handleRatingPopup}>\r\n        <StarRating average={average}/>\r\n        </div>\r\n       \r\n        <LiaCommentSolid onClick={handleCommentPopup}/>\r\n        <p>comment ({comments})</p>\r\n        </div>\r\n        </div>\r\n        <div style={{marginTop: '20px'}}>\r\n        <div>\r\n        <select id=\"dropdown\" onChange={handleDropdownChange} value={selectedDropdownValue} >\r\n        <option value=\"option1\">I am using it 👍</option>\r\n        <option value=\"option2\">Yes, I want to 🤩</option>\r\n         <option value=\"option3\">May be 🤔</option>\r\n         <option value=\"option4\">No, I don't 😐</option>\r\n        </select>\r\n          </div>\r\n          <p>{subscriptionPackage} {subscriptionAmount}$</p>\r\n          <p>{formattedDate}</p>\r\n        </div>\r\n    </div>\r\n\r\n    {showOverlay && commentsPopup && (\r\n        <div className=\"overlay\" onDoubleClick={handleOverlayDoubleClick}>\r\n          <CommentPopup info={info} id={id}/>\r\n        </div>\r\n  )}\r\n\r\n  {showOverlay && ratingPopup && (\r\n        <div className=\"overlay\" onDoubleClick={handleOverlayDoubleClick}>\r\n          <RatingPopup info={info} id={id}/>\r\n        </div>\r\n  )}\r\n\r\n{showOverlay && statusPopup && (\r\n        <div className=\"overlay\" onDoubleClick={handleOverlayDoubleClick}>\r\n          <StatusPopup info={info} id={id}/>\r\n        </div>\r\n  )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileProductItem",[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProfileProductsList.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\CommentPopup.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\CommentList.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\RatingPopup.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\StatusPopup.jsx",["181"],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\index.js",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\App.js",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Footer.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Login.jsx",["182"],[],"import React, { useState } from 'react';\nimport './Login.css';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login = ({setIsAuthenticated,setCredentials,credentials}) => {\n    const navigate = useNavigate()\n    // const [isAuthenticated, setIsAuthenticated]=useState(false)\n   \n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCredentials((prevCredentials) => ({\n            ...prevCredentials,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n\n        let { email, password } = credentials\n        try {\n            let res = await fetch(\"https://appsalabackend-p20y.onrender.com/login\", {\n              method: \"post\",\n              body: JSON.stringify({ email, password }),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n            // console.log(res)\n            // const token = await res.headers['x-api-token']\n            // console.log(token)\n            let result = await res.json();\n           \n            // console.log(result)\n        \n            if (result.status) {\n              setIsAuthenticated(true);\n              navigate(`/profile/${result.data.userId}`);\n            } else {\n              alert('wrong email or password');\n            }\n        \n            // Reset the form fields after submission\n            // setCredentials({\n            //   email: '',\n            //   password: '',\n            // });\n          } catch (error) {\n            console.error(\"Error during fetch:\", error);\n            alert('An error occurred during the login process.');\n          }\n        };\n    return (\n        <>\n            <div className=\"container\">\n\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label><strong>Email:</strong></label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={credentials.email}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={credentials.password}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Login</button>\n                    <p><Link to={\"/\"}>  Don't have account ?</Link> <Link to={\"/forgetpassword\"}>Forget Password</Link></p>\n                </form>\n            </div>\n\n        </>\n    );\n};\n\nexport default Login;\n","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Addcompany.jsx",["183","184","185"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./Addcompany.css\"; // Add this CSS file for styling\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './Review.css';\n\n\n\n    \nconst Addcompany = () => {\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    shortname: \"\",\n    slug: \"\",\n    rating: {\n\n    },\n    logo: null,\n    tag: [],\n    Category: \"\",\n    shortDescription: \"\",\n    longDescription: \"\",\n    review: \"\",\n    sellerDetails: {\n      seller: \"\",\n      Website: \"\",\n      companyWebsite: \"\",\n      yearFounded: \"\",\n      HQLocation: \"\",\n      socialmedia: {\n        twitter: \"\",\n        linkedInPage: \"\",\n      },\n    },\n    appPricing: [],\n    appMedia: {\n      officialScreenshots: [],\n      officialVideos: [],\n      officialDownloads: [],\n    },\n  });\n\n  const [appPricing, setAppPricing] = useState([\n    {\n      appName: '',\n      price: 0,\n      description: '',\n    },\n  ]);\n\n  const [appMedia, setAppMedia] = useState({\n    officialScreenshots: [],\n    officialVideos: [],\n    officialDownloads: [],\n  });\n\n  const handleAddAppPricing = () => {\n    setAppPricing([\n      ...appPricing,\n      {\n        appName: '',\n        price: 0,\n        description: '',\n      },\n    ]);\n  };\n\n  const handleAppPricingChange = (event, index) => {\n    const { name, value } = event.target;\n    const updatedAppPricing = appPricing.map((pricing, i) => {\n      if (i === index) {\n        return {\n          ...pricing,\n          [name]: value,\n        };\n      }\n      return pricing;\n    });\n\n    setAppPricing(updatedAppPricing);\n  };\n\n  const handleAppMediaChange = (event, field) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setAppMedia({\n        ...appMedia,\n        [field]: [...appMedia[field], reader.result],\n      });\n    };\n  };\n\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"twitter\") {\n      // Update the Twitter field in socialmedia\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        sellerDetails: {\n          ...prevFormData.sellerDetails,\n          socialmedia: {\n            ...prevFormData.sellerDetails.socialmedia,\n            twitter: value,\n          },\n        },\n      }));\n    } else if (name === \"linkedInPage\") {\n      // Update the LinkedIn Page field in socialmedia\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        sellerDetails: {\n          ...prevFormData.sellerDetails,\n          socialmedia: {\n            ...prevFormData.sellerDetails.socialmedia,\n            linkedInPage: value,\n          },\n        },\n      }));\n    } else if (name.includes(\".\")) {\n      const [outerName, innerName] = name.split(\".\");\n      // Update other fields\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        [outerName]: {\n          ...prevFormData[outerName],\n          [innerName]: value,\n        },\n      }));\n    } else if (name === \"tag\") {\n      const tagsArray = value.split(\", \");\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        tag: tagsArray,\n      }));\n    } else {\n      if (name === \"sellerDetails.yearFounded\" && value !== \"\") {\n        const numericValue = parseInt(value);\n        if (!Number.isNaN(numericValue) && numericValue >= 1000 && numericValue <= 9999) {\n          setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: value,\n          }));\n        }\n      } else {\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          [name]: value,\n        }));\n      }\n    }\n  };\n\n\n\n\n  const handleRatingChange = (e) => {\n    const { name, value } = e.target;\n    const numericValue = Number(value);\n\n    // Check if the value is a valid number between 0 and 5\n    if (!isNaN(numericValue) && numericValue >= 0 && numericValue <= 5) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        rating: {\n          ...prevFormData.rating,\n          [name]: numericValue,\n        },\n      }));\n    } else {\n      // If the value is invalid, set the rating field to null\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        rating: {\n          ...prevFormData.rating,\n          [name]: null,\n        },\n      }));\n    }\n  }\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      logo: file,\n    }));\n  };\n\n  const [richText, setRichText] = useState('');\n\n  // State to store the list of categories fetched from the API\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    // Fetch categories from the API when the component mounts\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = () => {\n    fetch(\"https://appsalabackend-p20y.onrender.com/subcategory\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Check if the response contains a \"data\" property that is an array\n        if (data && Array.isArray(data.data)) {\n          setCategories(data.data);\n        } else {\n          console.error(\"Invalid API response format - categories not found.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n  };\n\n  // ...\n\n  const handleSubmit = async (e) => {\n\n\n    try {\n      const formDataToUpload = new FormData();\n\n      formDataToUpload.append(\"name\", formData.name);\n      formDataToUpload.append(\"shortname\", formData.shortname);\n      formDataToUpload.append(\"slug\", formData.slug);\n      formDataToUpload.append(\"logo\", formData.logo);\n      formDataToUpload.append(\"tag\", formData.tag.join(\", \"));\n      formDataToUpload.append(\"Category\", formData.Category);\n      formDataToUpload.append(\"shortDescription\", formData.shortDescription);\n      formDataToUpload.append(\"longDescription\", formData.longDescription);\n      formDataToUpload.append(\"review\", formData.richText);\n\n      // Append sellerDetails as a JSON string\n      formDataToUpload.append(\"sellerDetails\", JSON.stringify(formData.sellerDetails));\n\n      // Append appPricing as a JSON string\n      formDataToUpload.append(\"appPricing\", JSON.stringify(appPricing));\n\n      // Append appMedia as a JSON string\n      formDataToUpload.append(\"appMedia\", JSON.stringify(appMedia));\n\n      console.warn(formDataToUpload);\n\n      // Post the form data to http://localhost:5000/create_products using fetch\n      const response = await fetch(\"https://appsalabackend-p20y.onrender.com/create_products\", {\n        method: \"POST\",\n        body: formDataToUpload,\n      });\n\n      \n\n      // Check if the response was successful before clearing the form\n      if (response.status === true) {\n        alert(\"Data saved successfully\",);\n      } else {\n        alert(\"There is a problem\",);\n      }\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n  };\n\n  // ...\n\n\n\n\n \n\n  const handleTextChange = (content) => {\n    setRichText(content);\n    // Update the review content in the formData state\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      review: richText,\n    }))\n  };\n\n\n\n\n\n  const TextEditorModules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n      ['link', 'image'],\n      ['clean'],\n    ],\n    clipboard: {\n      matchVisual: false,\n    },\n  };\n\n  const TextEditorFormats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image',\n  ];\n\n\n  return (\n    <div className=\"app-form-container\">\n      <h1>Create New Application</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n        />\n        <label htmlFor=\"slug\">slug:</label>\n        <input\n          type=\"text\"\n          id=\"slug\"\n          name=\"slug\"\n          value={formData.slug}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"shortname\">Short Name:</label>\n        <input\n          type=\"text\"\n          id=\"shortname\"\n          name=\"shortname\"\n          value={formData.shortname}\n          onChange={handleChange}\n          required\n        />\n\n        <h2>Rating:</h2>\n        <label htmlFor=\"Usability\">Usability:</label>\n        <input\n          type=\"number\"\n          id=\"Usability\"\n          name=\"rating.Usability\"\n          value={formData.rating.Usability}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Perfomance\">Performance:</label>\n        <input\n          type=\"number\"\n          id=\"Perfomance\"\n          name=\"rating.Perfomance\"\n          value={formData.rating.Perfomance}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Features\">Features:</label>\n        <input\n          type=\"number\"\n          id=\"Features\"\n          name=\"rating.Features\"\n          value={formData.rating.Features}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Support\">Support:</label>\n        <input\n          type=\"number\"\n          id=\"Support\"\n          name=\"rating.Support\"\n          value={formData.rating.Support}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Value\">Value:</label>\n        <input\n          type=\"number\"\n          id=\"Value\"\n          name=\"rating.Value\"\n          value={formData.rating.Value}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"company\">Company:</label>\n        <input\n          type=\"number\"\n          id=\"company\"\n          name=\"rating.company\"\n          value={formData.rating.company}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"logo\">Logo:</label>\n        <input\n          type=\"file\"\n          id=\"logo\"\n          name=\"logo\"\n          onChange={handleImageChange}\n        />\n\n        <label htmlFor=\"tag\">Tags</label>\n        <input\n          type=\"text\"\n          id=\"tag\"\n          name=\"tag\"\n          value={formData.tag.join(\", \")}\n          onChange={handleChange}\n        />\n\n        <label htmlFor=\"Category\">Category:</label>\n        <select\n          id=\"Category\"\n          name=\"Category\"\n          value={formData.Category}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\" disabled>\n            Select a category\n          </option>\n          {categories.map((category) => (\n            <option key={category._id} value={category.name}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"shortDescription\">Short Description:</label>\n        <textarea\n          id=\"shortDescription\"\n          name=\"shortDescription\"\n          value={formData.shortDescription}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"longDescription\">Long Description:</label>\n        <textarea\n          id=\"longDescription\"\n          name=\"longDescription\"\n          value={formData.longDescription}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"review\">Review:</label>\n        <h1>Review</h1>\n        <div>\n          <ReactQuill\n            value={richText}\n            onChange={handleTextChange}\n            placeholder=\"Enter your text here...\"\n            modules={TextEditorModules}\n            formats={TextEditorFormats}\n            style={{ height: '300px', marginBottom: '100px' }}\n          />\n        </div>\n\n\n\n        <label htmlFor=\"seller\">Seller:</label>\n        <input\n          type=\"text\"\n          id=\"seller\"\n          name=\"sellerDetails.seller\"\n          value={formData.sellerDetails.seller}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"Website\">Website:</label>\n        <input\n          type=\"text\"\n          id=\"Website\"\n          name=\"sellerDetails.Website\"\n          value={formData.sellerDetails.Website}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"companyWebsite\">Company Website:</label>\n        <input\n          type=\"text\"\n          id=\"companyWebsite\"\n          name=\"sellerDetails.companyWebsite\"\n          value={formData.sellerDetails.companyWebsite}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"yearFounded\">Year Founded:</label>\n        <input\n          type=\"number\"\n\n          id=\"yearFounded\"\n          name=\"sellerDetails.yearFounded\"\n          value={formData.sellerDetails.yearFounded}\n          onChange={handleChange}\n          required\n          min=\"1900\" max=\"2050\"\n        />\n\n        <label htmlFor=\"HQLocation\">HQ Location:</label>\n        <input\n          type=\"text\"\n          id=\"HQLocation\"\n          name=\"sellerDetails.HQLocation\"\n          value={formData.sellerDetails.HQLocation}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"twitter\">Twitter:</label>\n        <input\n          type=\"text\"\n          id=\"twitter\"\n          name=\"twitter\"  // Use \"twitter\" as the name, not \"sellerDetails.socialmedia.twitter\"\n          value={formData.sellerDetails.socialmedia.twitter}\n          onChange={handleChange}\n        />\n\n        <label htmlFor=\"linkedInPage\">LinkedIn Page:</label>\n        <input\n          type=\"text\"\n          id=\"linkedInPage\"\n          name=\"linkedInPage\" // Use \"linkedInPage\" as the name, not \"sellerDetails.socialmedia.linkedInPage\"\n          value={formData.sellerDetails.socialmedia.linkedInPage}\n          onChange={handleChange}\n        />\n\n        {/* \n{appPricing.map((pricing, index) => (\n        <div key={index}>\n          <input\n            type=\"text\"\n            placeholder=\"App Name\"\n            name=\"appName\"\n            value={pricing.appName}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Price\"\n            name=\"price\"\n            value={pricing.price}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={pricing.description}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n        </div>\n      ))}\n      <button onClick={handleAddAppPricing}>Add Pricing</button>\n\n      {/* App Media Fields\n     <label>Screenshots</label>\n      <input\n        type=\"file\"\n        name=\"officialScreenshots\"\n        placeholder=\"Screenshots\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialScreenshots')}\n      />\n      <label>officialVideos</label>\n      <input\n        type=\"file\"\n        name=\"officialVideos\"\n        placeholder=\"officialVideos\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialVideos')}\n      />\n      <label>officialDownloads</label>\n      <input\n        type=\"file\"\n        name=\"officialDownloads\"\n        placeholder=\"officialDownloads\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialDownloads')}\n      />  */}\n\n\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Addcompany;\n","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\PrivateRoute.jsx",["186"],[],"import React from 'react'\r\nimport { Outlet, Navigate,useNavigate } from 'react-router-dom'\r\n\r\nfunction PrivateRoute({isAuthenticated,setIsAuthenticated}) {\r\n    const navigate = useNavigate()\r\n    const handleLogout = () => {\r\n        // Perform logout logic, clear authentication state, and any cleanup tasks\r\n        setIsAuthenticated(false);\r\n        navigate('/')\r\n        // Optionally, clear tokens or session data here\r\n      };\r\n\r\n    if (isAuthenticated){\r\n        return(\r\n        <>\r\n        {/* <button onClick={handleLogout}>Logout</button> */}\r\n        <Outlet/>\r\n        </>\r\n        )\r\n    } else{\r\n        return <Navigate to='/login'/>\r\n    }\r\n}\r\n\r\nexport default PrivateRoute","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Home.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\ProductList.jsx",["187"],[],"import Button from '../components/Button'\r\nimport Products from '../components/Products'\r\nimport { useState, useEffect } from \"react\"\r\nimport { useParams } from 'react-router'\r\n\r\nfunction ProductList() {\r\n\r\n    const{ slug } = useParams()\r\n    const [category, setCategory] = useState([])\r\n\r\n    const [population, setPopulation]= useState(5)\r\n    const handleClick = () => setPopulation(population+5)\r\n    // const product_list = products?.data?.slice(0,population)\r\n\r\n\r\n    useEffect(() => {\r\n      const apiCategoryUrl = `https://appsalabackend-p20y.onrender.com/category/${slug}`\r\n    const fetchCategory = async() =>{\r\n      try{\r\n        const response = await fetch(apiCategoryUrl)\r\n        const data = await response.json()\r\n        console.log(data)\r\n        setCategory(data)\r\n      }\r\n     catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n    }\r\n  }\r\n      fetchCategory()\r\n    }, [slug])\r\n\r\n    \r\n\r\n var input_string = slug\r\n var output_string = input_string.replace(/-/g, \" \")\r\n var heading = input_string.replace(/-/g, \" \")\r\n    // console.log(category.data)\r\n        return (\r\n        <div>\r\n            <header className=\"product-header\">\r\n            <div className=\"product-header-inner\">\r\n            <p className=\"page-path\">Home / {output_string}</p>\r\n            <h1 className=\"product-heading\">\r\n                The best {heading} <span>Apps</span> in\r\n            </h1>\r\n        </div>\r\n        </header>\r\n        <div className=\"product-section container\">\r\n            <div className=\"product-question\">\r\n                <p className=\"question\">What are Note & Writing Apps?</p>\r\n                <p>Note-writing apps are digital tools designed to help users capture, organize, and manage their notes efficiently. These apps have become increasingly popular due to their convenience and versatility in various aspects of life, \r\n            both personal and professional. Here's a brief overview of note-writing apps:</p>\r\n            </div>  \r\n                    <Products products = {category.data}/>\r\n                    \r\n            <button onClick={handleClick} type=\"btn-border\">Show More</button>\r\n          \r\n        </div>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    export default ProductList\r\n  ","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Product.jsx",["188","189","190","191","192","193"],[],"import monday from '../assets/img/monday.png'\r\nimport dribbble from '../assets/img/dribbble.png'\r\nimport figma from '../assets/img/Group 96.png'\r\nimport behance from '../assets/img/behance.png'\r\n// import evernote from '../assets/img/Group.png'\r\nimport product from '../assets/img/product-image.png'\r\nimport Button from '../components/Button'\r\nimport { FaBookmark, FaGlobe } from 'react-icons/fa';\r\nimport { useParams } from 'react-router'\r\nimport SingleProduct from '../components/SingleProduct'\r\nimport { useEffect, useState } from \"react\"\r\nimport SimilarList from '../components/SimilarList'\r\nimport Spinner from '../components/Spinner'\r\nfunction Product({products}) {\r\n    const{ slug } = useParams()\r\n    var input_string = slug\r\n    var output_string = input_string.replace(/-/g, \" \")\r\n\r\n    const [singleProduct, setSingleProduct] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [similar, setSimilar] = useState([])\r\n     useEffect(()=>{\r\n      const apiUrl = 'https://appsalabackend-p20y.onrender.com/products'\r\n      const fetchData = async() =>{\r\n        const response = await fetch(apiUrl)\r\n        const data = await response.json()\r\n        const foundProducts = data.data.filter((product) => product.slug === slug);\r\n        setSingleProduct(foundProducts)\r\n        setSimilar(data.data.filter((product) => product?.Category === singleProduct[0]?.Category))\r\n        // setSimilar(similar)\r\n        console.log(similar)\r\n        // similar ? setLoading(false) : setLoading(true);\r\n        setLoading(false)\r\n      }\r\n        fetchData()\r\n      },[slug])\r\n\r\n    //   setSimilar(similar[0])\r\n  return (\r\n    <>\r\n    <div>\r\n      <header className=\"product-page-header container\">\r\n        <p className=\"page-path\">Home / {output_string}</p>\r\n        <div className=\"product-info-grid\">\r\n        <img src={singleProduct[0]?.logo} alt=\"\"/>\r\n    <div className=\"product-text\">\r\n    <p className=\"product-info-heading\">{singleProduct[0]?.name}</p>\r\n    <p style={{color: \"#454545\"}}>{singleProduct[0]?.review}</p>\r\n    <p>749  Follows</p>\r\n    </div>\r\n            <div className=\"buttons\">\r\n                <Button type= \"btn-light\"> <FaBookmark style={{margin: \"10px\"}}/> Save</Button>\r\n                <Button type= \"btn-dark\"> <FaGlobe style={{margin: \"10px\"}}/>Visit Web</Button>\r\n            </div>\r\n        </div>\r\n        <div className=\"product-question\">\r\n            <p className=\"question\">What is {singleProduct[0]?.name}?</p>\r\n            <p style={{color: \"#454545\"}}>{singleProduct[0]?.shortDescription} </p>\r\n        </div>\r\n        <div className=\"product-bar\">\r\n            <p>\r\n                Do you wish to use {output_string}?\r\n            </p>\r\n            <div className=\"comment-div\">\r\n            <div className=\"reaction selected\">\r\n                I am using it 👍\r\n            </div>\r\n            <div className=\"reaction\">\r\n                Yes, I want to 🤩\r\n            </div>\r\n            <div className=\"reaction\">\r\n               May be 🤔\r\n            </div>\r\n            <div className=\"reaction\">\r\n              No, I don't 😐\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </header>\r\n    <div className=\"image-section container\">\r\n        <p className=\"highlighted\">Productivity</p>\r\n        <img src={product} alt=\"\"/>\r\n    </div>\r\n\r\n    <div className=\"product-review-section container\">\r\n        <p className=\"bold\">Review</p>\r\n            \r\n\r\nTubeBuddy, an innovative browser extension designed to streamline and optimize YouTube content creation, has garnered immense popularity among content creators and marketers. With its array of time-saving features and data-driven functionalities, TubeBuddy has become an indispensable tool in the YouTube landscape. In this comprehensive review, we will explore the various aspects of TubeBuddy, including its Video SEO capabilities, in-depth analytics, time-saving bulk processing, competitor analysis, engagement tools, A/B testing, and customer support. By examining these features and their impact on content creation, we aim to shed light on how TubeBuddy has revolutionized YouTube channel management and success.\r\n\r\n<p>Video SEO Made Simple:</p>\r\n    \r\n\r\n<p>TubeBuddy's greatest strength lies in its Video SEO tools, which have transformed the way content creators optimize their videos for search and discovery. Upon installing the extension, users are greeted with a powerful keyword research feature that enables them to identify high-traffic and relevant keywords for their content. The intuitive keyword analysis also presents insights into the competitiveness of these keywords, allowing creators to choose the most strategic terms for their target audience.\r\n</p>\r\n<p>Moreover, TubeBuddy empowers users to optimize their video titles, tags, and descriptions directly within the YouTube upload interface. The real-time suggestions and tag explorer functionality make the process efficient and effective, ensuring that videos are easily discoverable by the intended audience. Additionally, the extension provides an invaluable tool to track and manage video rankings, offering content creators greater visibility into their videos' performance on YouTube's search engine.\r\n</p>\r\n    </div>\r\n\r\n<div className=\"alternatives\">\r\n    <div className=\"container\" style={{width:\"60%\"}}>\r\n    <h1 className=\"heading\">Similar Products / Alternatives</h1>\r\n    </div>\r\n        {/* { similar ? (\r\n  <SimilarList similar={similar}/> \r\n        ) :\r\n        <Spinner/>\r\n          } */}\r\n\r\n{\r\n\r\nloading ? <Spinner/> :\r\nsimilar ? (\r\n  <SimilarList similar={similar}/> \r\n):  \r\n<Spinner/> \r\n   \r\n}\r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"product-review-section container\">\r\n    <p>In-Depth Analytics:</p>\r\n\r\n<p>Understanding channel performance is pivotal for content creators seeking to refine their content strategy. TubeBuddy's analytics suite offers comprehensive insights into various performance metrics, including views, watch time, subscriber growth, audience demographics, and more. By utilizing these data-driven insights, content creators can make informed decisions about their content direction, allowing them to cater to their audience's preferences effectively.</p>\r\n\r\n<p>The analytical tools also allow for historical data tracking, which is vital for identifying long-term trends and seasonal patterns in viewership. Creators can observe their channel's growth over time, aiding them in setting realistic goals and tracking progress towards milestones. TubeBuddy's analytics go beyond the basic YouTube Studio metrics, providing a more robust and detailed view of channel performance.</p>\r\n\r\n<p>Time-Saving Bulk Processing:</p>\r\n\r\n<p>Managing a YouTube channel often involves handling a significant number of videos, which can be time-consuming and repetitive. TubeBuddy's bulk processing tools come to the rescue, offering a range of actions that can be applied to multiple videos simultaneously. From updating video cards and annotations to changing privacy settings, these batch updates save creators valuable time, enabling them to focus on content creation and other aspects of channel growth.</p>\r\n\r\n<p>Content creators with vast video libraries benefit greatly from these features, as they can efficiently maintain and optimize their entire content catalog without individually editing each video. This feature is especially valuable for seasoned creators and businesses with extensive video libraries.</p>\r\n\r\n<p>Competitor Analysis:</p>\r\n\r\n<p>Staying ahead of the competition is a constant challenge in the dynamic YouTube ecosystem. TubeBuddy's competitor analysis feature provides creators with an edge by offering insights into competitors' strategies, keywords, and video performance. This powerful tool allows users to identify popular keywords and trends that competitors are leveraging successfully, enabling them to tailor their content and maximize their reach.</p>\r\n\r\n<p>Furthermore, the feature allows users to compare their own performance with that of their competitors, offering valuable benchmarks for improvement. By understanding the strengths and weaknesses of competitors, content creators can identify opportunities and refine their content to stand out in their niche.</p>\r\n\r\n<p>Engagement and Promotion:</p>\r\n\r\n<p>Building a loyal and engaged community is essential for the sustained growth of a YouTube channel. TubeBuddy facilitates this process through its suite of engagement and promotion tools. Creators can efficiently interact with their audience, respond to comments, and thank subscribers, fostering a stronger sense of connection and loyalty.</p>\r\n\r\n<p>Additionally, the platform offers seamless integration with popular social media platforms, allowing creators to promote their videos and channel across multiple channels effortlessly. The ability to cross-promote content increases visibility and drives traffic to the channel, contributing to audience growth and video performance.</p>\r\n\r\n\r\n\r\n</div>\r\n<div className=\"pros-cons container\">\r\n    <p className=\"bold\" style={{color:\"#00A82D\"}}>Positive</p>\r\n    <p>The economy plan offered by GoDaddy.com provides essential services for most users, and is a great plan to start a website with. You will find it easy to access the basic package, as designed for everyone.The economy plan offered by GoDaddy.com provides essential services for most users, and is a great plan to start a website with. You will find it easy to access the basic package, as designed for everyone.</p>\r\n    <p className=\"bold\" style={{color:\"#FF1818\"}}>Negative</p>\r\n    <p>The economy plan offered by GoDaddy.com provides essential services for most users, and is a great plan to start a website with. You will find it easy to access the basic package, as designed for everyone.The economy plan offered by GoDaddy.com provides essential services for most users, and is a great plan to start a website with. You will find it easy to access the basic package, as designed for everyone.</p>\r\n    <p className=\"bold\">Conclusion</p>\r\n    <p>The economy plan offered by GoDaddy.com provides essential services for most users, and is a great plan to start a website with. You will find it easy to access the basic package, as designed for everyone.The economy plan offered by GoDaddy.com provides essential services for most users, and is a great plan to start a website with. You will find it easy to access the basic package, as designed for everyone.</p>\r\n</div>\r\n</>\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Product","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Button.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Menu.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SearchList.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductCard.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ReviewCard.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProfilePage.jsx",["194"],[],"import { useEffect } from 'react'\r\nfunction ProfilePage({user}) {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {user.name} Profile \r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SingleProduct.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Settings.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SimilarList.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Products.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductCardItem.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductItem.jsx",[],[],{"ruleId":"195","severity":1,"message":"196","line":21,"column":10,"nodeType":"197","messageId":"198","endLine":21,"endColumn":19},{"ruleId":"195","severity":1,"message":"199","line":21,"column":21,"nodeType":"197","messageId":"198","endLine":21,"endColumn":33},{"ruleId":"200","severity":1,"message":"201","line":32,"column":5,"nodeType":"202","endLine":32,"endColumn":7,"suggestions":"203"},{"ruleId":"200","severity":1,"message":"204","line":36,"column":6,"nodeType":"202","endLine":36,"endColumn":12,"suggestions":"205"},{"ruleId":"195","severity":1,"message":"206","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"207","line":11,"column":31,"nodeType":"197","messageId":"198","endLine":11,"endColumn":55},{"ruleId":"208","severity":1,"message":"209","line":11,"column":68,"nodeType":"197","messageId":"210","endLine":11,"endColumn":74},{"ruleId":"211","severity":1,"message":"212","line":30,"column":7,"nodeType":"197","messageId":"213","endLine":30,"endColumn":20},{"ruleId":"211","severity":1,"message":"214","line":36,"column":7,"nodeType":"197","messageId":"213","endLine":36,"endColumn":15},{"ruleId":"211","severity":1,"message":"215","line":49,"column":7,"nodeType":"197","messageId":"213","endLine":49,"endColumn":14},{"ruleId":"211","severity":1,"message":"216","line":55,"column":7,"nodeType":"197","messageId":"213","endLine":55,"endColumn":11},{"ruleId":"211","severity":1,"message":"217","line":61,"column":7,"nodeType":"197","messageId":"213","endLine":61,"endColumn":11},{"ruleId":"211","severity":1,"message":"218","line":68,"column":7,"nodeType":"197","messageId":"213","endLine":68,"endColumn":23},{"ruleId":"211","severity":1,"message":"218","line":70,"column":7,"nodeType":"197","messageId":"213","endLine":70,"endColumn":23},{"ruleId":"211","severity":1,"message":"218","line":74,"column":7,"nodeType":"197","messageId":"213","endLine":74,"endColumn":23},{"ruleId":"211","severity":1,"message":"219","line":79,"column":7,"nodeType":"197","messageId":"213","endLine":79,"endColumn":26},{"ruleId":"211","severity":1,"message":"220","line":84,"column":7,"nodeType":"197","messageId":"213","endLine":84,"endColumn":25},{"ruleId":"211","severity":1,"message":"221","line":90,"column":7,"nodeType":"197","messageId":"213","endLine":90,"endColumn":13},{"ruleId":"211","severity":1,"message":"222","line":98,"column":7,"nodeType":"197","messageId":"213","endLine":98,"endColumn":15},{"ruleId":"211","severity":1,"message":"222","line":100,"column":7,"nodeType":"197","messageId":"213","endLine":100,"endColumn":15},{"ruleId":"211","severity":1,"message":"222","line":105,"column":7,"nodeType":"197","messageId":"213","endLine":105,"endColumn":15},{"ruleId":"195","severity":1,"message":"223","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"223","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"224","line":58,"column":9,"nodeType":"197","messageId":"198","endLine":58,"endColumn":28},{"ruleId":"195","severity":1,"message":"225","line":69,"column":9,"nodeType":"197","messageId":"198","endLine":69,"endColumn":31},{"ruleId":"195","severity":1,"message":"226","line":84,"column":9,"nodeType":"197","messageId":"198","endLine":84,"endColumn":29},{"ruleId":"195","severity":1,"message":"227","line":6,"column":11,"nodeType":"197","messageId":"198","endLine":6,"endColumn":23},{"ruleId":"195","severity":1,"message":"228","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":14},{"ruleId":"195","severity":1,"message":"206","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":14},{"ruleId":"195","severity":1,"message":"229","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"230","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},{"ruleId":"195","severity":1,"message":"231","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":15},{"ruleId":"195","severity":1,"message":"232","line":10,"column":8,"nodeType":"197","messageId":"198","endLine":10,"endColumn":21},{"ruleId":"200","severity":1,"message":"233","line":36,"column":9,"nodeType":"202","endLine":36,"endColumn":15,"suggestions":"234"},{"ruleId":"195","severity":1,"message":"235","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":19},"no-unused-vars","'savedApps' is assigned a value but never used.","Identifier","unusedVar","'setSavedApps' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["236"],"React Hook useEffect has a missing dependency: 'AllUsers'. Either include it or remove the dependency array.",["237"],"'monday' is defined but never used.","'setSelectedDropdownValue' is assigned a value but never used.","no-use-before-define","'status' was used before it was defined.","usedBeforeDefined","no-redeclare","'formattedDate' is already defined.","redeclared","'comments' is already defined.","'average' is already defined.","'logo' is already defined.","'name' is already defined.","'shortDescription' is already defined.","'subscriptionPackage' is already defined.","'subscriptionAmount' is already defined.","'status' is already defined.","'category' is already defined.","'useState' is defined but never used.","'handleAddAppPricing' is assigned a value but never used.","'handleAppPricingChange' is assigned a value but never used.","'handleAppMediaChange' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'Button' is defined but never used.","'dribbble' is defined but never used.","'figma' is defined but never used.","'behance' is defined but never used.","'SingleProduct' is defined but never used.","React Hook useEffect has missing dependencies: 'similar' and 'singleProduct'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSimilar' needs the current value of 'singleProduct'.",["238"],"'useEffect' is defined but never used.",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [fetchUser]",{"range":"245","text":"246"},"Update the dependencies array to be: [AllUsers, user]",{"range":"247","text":"248"},"Update the dependencies array to be: [similar, singleProduct, slug]",{"range":"249","text":"250"},[1263,1265],"[fetchUser]",[1313,1319],"[AllUsers, user]",[1590,1596],"[similar, singleProduct, slug]"]