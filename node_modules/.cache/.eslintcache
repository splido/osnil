[{"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\index.js":"1","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\App.js":"2","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Navbar.jsx":"3","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Button.jsx":"4","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Footer.jsx":"5","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Home.jsx":"6","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Product.jsx":"7","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\ProductList.jsx":"8","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Products.jsx":"9","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductItem.jsx":"10","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SingleProduct.jsx":"11","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Spinner.jsx":"12","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Menu.jsx":"13","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SearchList.jsx":"14","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Addcompany.jsx":"15","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Login.jsx":"16","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\PrivateRoute.jsx":"17"},{"size":256,"mtime":1690270534492,"results":"18","hashOfConfig":"19"},{"size":1529,"mtime":1691046055239,"results":"20","hashOfConfig":"19"},{"size":3547,"mtime":1691046005257,"results":"21","hashOfConfig":"19"},{"size":191,"mtime":1690885467753,"results":"22","hashOfConfig":"19"},{"size":162,"mtime":1690272761793,"results":"23","hashOfConfig":"19"},{"size":9293,"mtime":1690883426171,"results":"24","hashOfConfig":"19"},{"size":16365,"mtime":1690959890962,"results":"25","hashOfConfig":"19"},{"size":1423,"mtime":1690961819210,"results":"26","hashOfConfig":"19"},{"size":1271,"mtime":1690966506117,"results":"27","hashOfConfig":"19"},{"size":2090,"mtime":1690434338510,"results":"28","hashOfConfig":"19"},{"size":1851,"mtime":1690955111210,"results":"29","hashOfConfig":"19"},{"size":154,"mtime":1690436395887,"results":"30","hashOfConfig":"19"},{"size":484,"mtime":1690885473303,"results":"31","hashOfConfig":"19"},{"size":707,"mtime":1690885538571,"results":"32","hashOfConfig":"19"},{"size":14466,"mtime":1690969427973,"results":"33","hashOfConfig":"19"},{"size":2643,"mtime":1691044977148,"results":"34","hashOfConfig":"19"},{"size":687,"mtime":1691046335391,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"xe0nff",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\index.js",[],[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\App.js",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Navbar.jsx",[],[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Button.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Footer.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Home.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\Product.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\ProductList.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Products.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\ProductItem.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SingleProduct.jsx",["91"],[],"\r\nimport { useEffect, useState } from \"react\"\r\nfunction SingleProduct({name}) {\r\n    // const products = props.products\r\n    // const name = props.name\r\n    const [singleProduct, setSingleProduct] = useState([])\r\n     useEffect(()=>{\r\n        fetchData()\r\n      },[])\r\n  \r\n     const apiUrl = 'https://appsalabackend.onrender.com/products'\r\n  \r\n    const fetchData = async() =>{\r\n      const response = await fetch(apiUrl)\r\n      const data = await response.json()\r\n    //   console.log(typeof(data))\r\n    //   console.log(data.data)\r\n    //   console.log(typeof(data.data))\r\n    // console.log(name)\r\n      const foundProducts = data.data.filter((product) => product.name === name);\r\n      setSingleProduct(foundProducts)\r\n      console.log(singleProduct[0].name)\r\n      console.log(typeof(singleProduct))\r\n    //   console.log(foundProducts)\r\n    //   if(data){\r\n    //     console.log(data)\r\n    //   }\r\n\r\n    //   if (!Array.isArray(data)) {\r\n    //     throw new Error('Data is not an array.');\r\n    //   }\r\n\r\n    // const dataArray = Array.from(data);\r\n    // console.log(dataArray)\r\n    //   const foundProducts = dataArray.filter((product) => product.name === name);\r\n    //   console.log(foundProducts)\r\n    }\r\n\r\n//     setSingleProduct(foundProducts)\r\n\r\n//    const foundProducts = products.filter((product) => product.name === name);\r\n//    console.log(products)\r\n//    console.log(products)\r\n//     const foundProducts = products.find((product) => product.name === name);\r\n//     console.log(foundProducts)\r\n  return (\r\n    <>\r\n    <img src={singleProduct[0]?.logo} alt=\"\"/>\r\n    <div className=\"product-text\">\r\n    <p className=\"product-info-heading\">{singleProduct[0]?.name}</p>\r\n    <p style={{color: \"#454545;\"}}>{singleProduct[0]?.review}\r\n    </p>\r\n    <p>749  Follows</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleProduct","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Menu.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\SearchList.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Addcompany.jsx",["92","93","94","95"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./Addcompany.css\"; // Add this CSS file for styling\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './Review.css';\n\n\n\n\nconst Addcompany = () => {\n  \n  const [formData, setFormData] = useState({\n    name: \"\",\n    shortname: \"\",\n    rating: {\n      \n    },\n    logo: null,\n    tag: [],\n    Category: \"\",\n    shortDescription: \"\",\n    longDescription: \"\",\n    review: \"\",\n    sellerDetails: {\n      seller: \"\", \n      Website: \"\",\n      companyWebsite: \"\",\n      yearFounded: \"\",\n      HQLocation: \"\",\n      socialmedia: { \n        twitter: \"\",\n        linkedInPage: \"\",\n      },\n    },\n    appPricing: [],\n    appMedia: {\n      officialScreenshots: [],\n      officialVideos: [],\n      officialDownloads: [],\n    },\n  });\n\n  const [appPricing, setAppPricing] = useState([\n    {\n      appName: '',\n      price: 0,\n      description: '',\n    },\n  ]);\n\n  const [appMedia, setAppMedia] = useState({\n    officialScreenshots: [],\n    officialVideos: [],\n    officialDownloads: [],\n  });\n\n  const handleAddAppPricing = () => {\n    setAppPricing([\n      ...appPricing,\n      {\n        appName: '',\n        price: 0,\n        description: '',\n      },\n    ]);\n  };\n\n  const handleAppPricingChange = (event, index) => {\n    const { name, value } = event.target;\n    const updatedAppPricing = appPricing.map((pricing, i) => {\n      if (i === index) {\n        return {\n          ...pricing,\n          [name]: value,\n        };\n      }\n      return pricing;\n    });\n\n    setAppPricing(updatedAppPricing);\n  };\n\n  const handleAppMediaChange = (event, field) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setAppMedia({\n        ...appMedia,\n        [field]: [...appMedia[field], reader.result],\n      });\n    };\n  };\n\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n  \n    if (name === \"twitter\") {\n      // Update the Twitter field in socialmedia\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        sellerDetails: {\n          ...prevFormData.sellerDetails,\n          socialmedia: {\n            ...prevFormData.sellerDetails.socialmedia,\n            twitter: value,\n          },\n        },\n      }));\n    } else if (name === \"linkedInPage\") {\n      // Update the LinkedIn Page field in socialmedia\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        sellerDetails: {\n          ...prevFormData.sellerDetails,\n          socialmedia: {\n            ...prevFormData.sellerDetails.socialmedia,\n            linkedInPage: value,\n          },\n        },\n      }));\n    } else if (name.includes(\".\")) {\n      const [outerName, innerName] = name.split(\".\");\n      // Update other fields\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        [outerName]: {\n          ...prevFormData[outerName],\n          [innerName]: value,\n        },\n      }));\n    } else if (name === \"tag\") {\n      const tagsArray = value.split(\", \");\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        tag: tagsArray,\n      }));\n    } else {\n      if (name === \"sellerDetails.yearFounded\" && value !== \"\") {\n        const numericValue = parseInt(value);\n        if (!Number.isNaN(numericValue) && numericValue >= 1000 && numericValue <= 9999) {\n          setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: value,\n          }));\n        }\n      } else {\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          [name]: value,\n        }));\n      }\n    }\n  };\n  \n\n\n\n  const handleRatingChange = (e) => {\n    const { name, value } = e.target;\n    const numericValue = Number(value);\n\n    // Check if the value is a valid number between 0 and 5\n    if (!isNaN(numericValue) && numericValue >= 0 && numericValue <= 5) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        rating: {\n          ...prevFormData.rating,\n          [name]: numericValue,\n        },\n      }));\n    } else {\n      // If the value is invalid, set the rating field to null\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        rating: {\n          ...prevFormData.rating,\n          [name]: null,\n        },\n      }));\n    }\n  }\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      logo: file,\n    }));\n  };\n\n  // State to store the list of categories fetched from the API\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    // Fetch categories from the API when the component mounts\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = () => {\n    fetch(\"http://localhost:5000/category\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Check if the response contains a \"data\" property that is an array\n        if (data && Array.isArray(data.data)) {\n          setCategories(data.data);\n        } else {\n          console.error(\"Invalid API response format - categories not found.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n  };\n\n  const handleSubmit = async () => {\n    \n\n    try {\n      // Post the form data to http://localhost:5000/apps using fetch\n      const response = await fetch(\"http://localhost:5000/create_products\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      // Check if the response was successful before clearing the form\n      if (response.ok) {\n        \n        alert(\"Data saved successfully\");\n      } else {\n        alert(\"There is a problem\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n  };\n  \n\n\n  const [richText, setRichText] = useState('');\n\n  const handleTextChange = (content) => {\n    setRichText(content);\n    // Update the review content in the formData state\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      review: richText,\n    }))\n  };\n\n\n\n\n\n  const TextEditorModules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n      ['link', 'image'],\n      ['clean'],\n    ],\n    clipboard: {\n      matchVisual: false,\n    },\n  };\n\n  const TextEditorFormats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image',\n  ];\n\n\n  return (\n    <div className=\"app-form-container\">\n      <h1>Create New Application</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"shortname\">Short Name:</label>\n        <input\n          type=\"text\"\n          id=\"shortname\"\n          name=\"shortname\"\n          value={formData.shortname}\n          onChange={handleChange}\n          required\n        />\n\n        <h2>Rating:</h2>\n        <label htmlFor=\"Usability\">Usability:</label>\n        <input\n          type=\"number\"\n          id=\"Usability\"\n          name=\"rating.Usability\"\n          value={formData.rating.Usability}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Perfomance\">Performance:</label>\n        <input\n          type=\"number\"\n          id=\"Perfomance\"\n          name=\"rating.Perfomance\"\n          value={formData.rating.Perfomance}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Features\">Features:</label>\n        <input\n          type=\"number\"\n          id=\"Features\"\n          name=\"rating.Features\"\n          value={formData.rating.Features}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Support\">Support:</label>\n        <input\n          type=\"number\"\n          id=\"Support\"\n          name=\"rating.Support\"\n          value={formData.rating.Support}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"Value\">Value:</label>\n        <input\n          type=\"number\"\n          id=\"Value\"\n          name=\"rating.Value\"\n          value={formData.rating.Value}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n\n        <label htmlFor=\"company\">Company:</label>\n        <input\n          type=\"number\"\n          id=\"company\"\n          name=\"rating.company\"\n          value={formData.rating.company}\n          onChange={handleRatingChange}\n          min={0}\n          max={5}\n        />\n{/* \n        <label htmlFor=\"logo\">Logo:</label>\n        <input\n          type=\"file\"\n          id=\"logo\"\n          name=\"logo\"\n          onChange={handleImageChange}\n        /> */}\n\n        <label htmlFor=\"tag\">Tags</label>\n        <input\n          type=\"text\"\n          id=\"tag\"\n          name=\"tag\"\n          value={formData.tag.join(\", \")}\n          onChange={handleChange}\n        />\n\n        <label htmlFor=\"Category\">Category:</label>\n        <select\n          id=\"Category\"\n          name=\"Category\"\n          value={formData.Category}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\" disabled>\n            Select a category\n          </option>\n          {categories.map((category) => (\n            <option key={category._id} value={category._id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"shortDescription\">Short Description:</label>\n        <textarea\n          id=\"shortDescription\"\n          name=\"shortDescription\"\n          value={formData.shortDescription}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"longDescription\">Long Description:</label>\n        <textarea\n          id=\"longDescription\"\n          name=\"longDescription\"\n          value={formData.longDescription}\n          onChange={handleChange}\n          required\n        />\n        \n          <label htmlFor=\"review\">Review:</label>\n          <h1>Rich Text Editor</h1>\n          <div>\n          <ReactQuill\n            value={richText}\n            onChange={handleTextChange}\n            placeholder=\"Enter your text here...\"\n            modules={TextEditorModules}\n            formats={TextEditorFormats}\n            style={{ height: '300px', marginBottom :'100px' }}\n          />\n          </div>\n          \n      \n        \n        <label htmlFor=\"seller\">Seller:</label>\n        <input\n          type=\"text\"\n          id=\"seller\"\n          name=\"sellerDetails.seller\"\n          value={formData.sellerDetails.seller}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"Website\">Website:</label>\n        <input\n          type=\"text\"\n          id=\"Website\"\n          name=\"sellerDetails.Website\"\n          value={formData.sellerDetails.Website}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"companyWebsite\">Company Website:</label>\n        <input\n          type=\"text\"\n          id=\"companyWebsite\"\n          name=\"sellerDetails.companyWebsite\"\n          value={formData.sellerDetails.companyWebsite}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"yearFounded\">Year Founded:</label>\n        <input\n          type=\"number\"\n\n          id=\"yearFounded\"\n          name=\"sellerDetails.yearFounded\"\n          value={formData.sellerDetails.yearFounded}\n          onChange={handleChange}\n          required\n          min=\"1900\" max=\"2050\"\n        />\n\n        <label htmlFor=\"HQLocation\">HQ Location:</label>\n        <input\n          type=\"text\"\n          id=\"HQLocation\"\n          name=\"sellerDetails.HQLocation\"\n          value={formData.sellerDetails.HQLocation}\n          onChange={handleChange}\n          required\n        />\n\n<label htmlFor=\"twitter\">Twitter:</label>\n<input\n  type=\"text\"\n  id=\"twitter\"\n  name=\"twitter\"  // Use \"twitter\" as the name, not \"sellerDetails.socialmedia.twitter\"\n  value={formData.sellerDetails.socialmedia.twitter}\n  onChange={handleChange}\n/>\n\n<label htmlFor=\"linkedInPage\">LinkedIn Page:</label>\n<input\n  type=\"text\"\n  id=\"linkedInPage\"\n  name=\"linkedInPage\" // Use \"linkedInPage\" as the name, not \"sellerDetails.socialmedia.linkedInPage\"\n  value={formData.sellerDetails.socialmedia.linkedInPage}\n  onChange={handleChange}\n/>\n\n\n{/* {appPricing.map((pricing, index) => (\n        <div key={index}>\n          <input\n            type=\"text\"\n            placeholder=\"App Name\"\n            name=\"appName\"\n            value={pricing.appName}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Price\"\n            name=\"price\"\n            value={pricing.price}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={pricing.description}\n            onChange={(e) => handleAppPricingChange(e, index)}\n          />\n        </div>\n      ))}\n      <button onClick={handleAddAppPricing}>Add Pricing</button>\n\n      {/* App Media Fields */}\n      {/* <label>Screenshots</label>\n      <input\n        type=\"file\"\n        name=\"officialScreenshots\"\n        placeholder=\"Screenshots\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialScreenshots')}\n      />\n      <label>officialVideos</label>\n      <input\n        type=\"file\"\n        name=\"officialVideos\"\n        placeholder=\"officialVideos\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialVideos')}\n      />\n      <label>officialDownloads</label>\n      <input\n        type=\"file\"\n        name=\"officialDownloads\"\n        placeholder=\"officialDownloads\"\n        multiple\n        onChange={(e) => handleAppMediaChange(e, 'officialDownloads')}\n      /> */} \n\n\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Addcompany;\n","C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\components\\Login.jsx",[],[],"C:\\Users\\Ali\\Desktop\\Appsala React\\appsala\\src\\pages\\PrivateRoute.jsx",[],[],{"ruleId":"96","severity":1,"message":"97","line":9,"column":9,"nodeType":"98","endLine":9,"endColumn":11,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":57,"column":9,"nodeType":"102","messageId":"103","endLine":57,"endColumn":28},{"ruleId":"100","severity":1,"message":"104","line":68,"column":9,"nodeType":"102","messageId":"103","endLine":68,"endColumn":31},{"ruleId":"100","severity":1,"message":"105","line":83,"column":9,"nodeType":"102","messageId":"103","endLine":83,"endColumn":29},{"ruleId":"100","severity":1,"message":"106","line":189,"column":9,"nodeType":"102","messageId":"103","endLine":189,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'handleAddAppPricing' is assigned a value but never used.","Identifier","unusedVar","'handleAppPricingChange' is assigned a value but never used.","'handleAppMediaChange' is assigned a value but never used.","'handleImageChange' is assigned a value but never used.",{"desc":"108","fix":"109"},"Update the dependencies array to be: [fetchData]",{"range":"110","text":"111"},[264,266],"[fetchData]"]